# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: Build and publish GradsSharp

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
          dotnet-version: 7.0.x
    - name: Bump build version
      id: bump
      uses: vers-one/dotnet-project-version-updater@v1.3
      
      with:
          file: |
            "**/*.csproj", "**/*.nuspec", "**/AssemblyInfo.cs"
          version: bump-build
    
    - run: |
        git config user.name "Bart Devriendt"
        git config user.email "bart.devriendt@gmail.com"
        git add .
        git commit -m "Update project version to ${{ steps.update.outputs.newVersion }}"
        git push
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore -c Release
    - name: Pack
      if: ${{ success() && !github.base_ref }}
      run: |
        dotnet pack src/GradsSharp/GradsSharp.csproj --no-build --verbosity normal -c Release -o artifacts/
        dotnet pack src/GradsSharp.DrawingEngine.Cairo/GradsSharp.DrawingEngine.Cairo.csproj --no-build --verbosity normal -c Release -o artifacts/        
    - name: Push to NuGet
      if: ${{ success() && !github.base_ref }}
      run: dotnet nuget push artifacts/**.nupkg -s https://api.nuget.org/v3/index.json --api-key ${{secrets.NUGET_API_KEY}}        

